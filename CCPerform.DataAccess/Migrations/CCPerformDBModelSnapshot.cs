// <auto-generated />
using System;
using CCPerform.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCPerform.DataAccess.Migrations
{
    [DbContext(typeof(CCPerformDB))]
    partial class CCPerformDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CCPerform.Entity.BantasBase.CashCenter", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("CashCenterCode")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CashCenterGroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashCenterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OperationDepartmentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SecurityDepartmentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CashCenterGroupID");

                    b.HasIndex("OperationDepartmentID");

                    b.HasIndex("SecurityDepartmentID");

                    b.ToTable("CashCenters");
                });

            modelBuilder.Entity("CCPerform.Entity.BantasBase.CashCenterGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashCenterGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CashCenterGroups");
                });

            modelBuilder.Entity("CCPerform.Entity.BantasBase.OperationDepartment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationDepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("OperationDepartments");
                });

            modelBuilder.Entity("CCPerform.Entity.BantasBase.SecurityDepartment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityDepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("SecurityDepartments");
                });

            modelBuilder.Entity("CCPerform.Entity.BantasBase.CashCenter", b =>
                {
                    b.HasOne("CCPerform.Entity.BantasBase.CashCenterGroup", "CashCenterGroup")
                        .WithMany("CashCenters")
                        .HasForeignKey("CashCenterGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CCPerform.Entity.BantasBase.OperationDepartment", "OperationDepartment")
                        .WithMany("CashCenters")
                        .HasForeignKey("OperationDepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CCPerform.Entity.BantasBase.SecurityDepartment", "SecurityDepartment")
                        .WithMany("CashCenters")
                        .HasForeignKey("SecurityDepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashCenterGroup");

                    b.Navigation("OperationDepartment");

                    b.Navigation("SecurityDepartment");
                });

            modelBuilder.Entity("CCPerform.Entity.BantasBase.CashCenterGroup", b =>
                {
                    b.Navigation("CashCenters");
                });

            modelBuilder.Entity("CCPerform.Entity.BantasBase.OperationDepartment", b =>
                {
                    b.Navigation("CashCenters");
                });

            modelBuilder.Entity("CCPerform.Entity.BantasBase.SecurityDepartment", b =>
                {
                    b.Navigation("CashCenters");
                });
#pragma warning restore 612, 618
        }
    }
}
